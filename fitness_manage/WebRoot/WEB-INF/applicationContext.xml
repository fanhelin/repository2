<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="	
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd 
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
    <!-- 启动mvc注解配置 -->
    <mvc:annotation-driven/>
    
	<!-- 使用注解的包，包括子集 -->
	<context:component-scan base-package="com.wx.*"></context:component-scan>

	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/img/**" location="/img/" />
	<mvc:resources mapping="/easyui/**" location="/easyui/" />
	<mvc:default-servlet-handler />
	
	<mvc:interceptors>  
	    <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->  
	    <bean class="com.framework.interceptor.AllInterceptor"/>  
	    
	    <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 
	    <mvc:interceptor>  
	        <mvc:mapping path="/test/number.do"/>  
	         
	        <bean class="com.host.app.web.interceptor.LoginInterceptor"/>  
	    </mvc:interceptor>  
	    -->
	    
   </mvc:interceptors> 
	
	<!-- 视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		 <property name="prefix" value="/WEB-INF/view/"></property>
		 <property name="suffix" value=".jsp"></property>
	</bean>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
       <property name="locations">  
              <value>classpath:configs/*.properties</value>  
       </property>  
   </bean>
	
	<!-- mysql 数据源配置
	  <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	   <property name="driverClass" value="com.mysql.jdbc.Driver"></property> 
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/express?characterEncoding=utf-8"></property>
	    <property name="user" value="root"></property>
        <property name="password" value="root"></property>
        <property name="minPoolSize" value="5"></property>
        <property name="maxPoolSize" value="100"></property>
     </bean> -->
   
    
      <!-- 数据源配置 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.driverClass}"/>
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="user" value="${db.user}"/>
        <property name="password" value="${db.password}"/>
        <property name="minPoolSize" value="${db.minPoolSize}"/>
        <property name="maxPoolSize" value="${db.maxPoolSize}"/>
        <property name="initialPoolSize" value="${db.initialPoolSize}"/>  
        <property name="maxIdleTime" value="${db.maxIdleTime}"/>
	     <property name="maxStatements" value="${db.maxStatements}"/>
	     <property name="maxStatementsPerConnection" value="${db.maxStatementsPerConnection}"/>
	     <property name="numHelperThreads" value="${db.numHelperThreads}"/>
	     <property name="testConnectionOnCheckin" value="${db.testConnectionOnCheckin}"/>
	     <property name="idleConnectionTestPeriod" value="${db.idleConnectionTestPeriod}"/>
	     <property name="checkoutTimeout" value="${db.checkoutTimeout}"/>
	     <property name="preferredTestQuery" value="${db.preferredTestQuery}"/>
	     <property name="acquireIncrement" value="${db.acquireIncrement}"/>
    </bean> 
   
    
    <!-- 会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:configs/mybatis-config.xml"></property>
        <property name="mapperLocations" value="classpath:com/wx/mapper/*/*.xml"></property>
    </bean>
    
    <!-- 事务处理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"></tx:method>
            <tx:method name="delete*" propagation="REQUIRED"></tx:method>
            <tx:method name="update*" propagation="REQUIRED"></tx:method>
            <tx:method name="add*" propagation="REQUIRED"></tx:method>
            <tx:method name="set*" propagation="REQUIRED"></tx:method>
            <tx:method name="edit*" propagation="REQUIRED"></tx:method>
            <!-- 保存并审核 -->
            <tx:method name="save*" propagation="REQUIRED"></tx:method>
             <!-- 运单审核 -->
            <tx:method name="audit*" propagation="REQUIRED"></tx:method>
            <tx:method name="gen*" propagation="REQUIRED"></tx:method>
            <tx:method name="conf*" propagation="REQUIRED"></tx:method>
            <tx:method name="select*" propagation="SUPPORTS"></tx:method>
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:pointcut id="serviceCut" expression="execution(* com.wx.serviceImpl..*.*(..))" />
        <aop:advisor pointcut-ref="serviceCut" advice-ref="txAdvice" />
    </aop:config>
    
    <!-- spring和mybatis的整合 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wx.mapper"/>
    </bean>
     
    
     <!-- redis 配置 -->
      <bean id="jredisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
        <property name="testOnReturn" value="${redis.testOnReturn}"/>
       
    </bean>
       
       
     <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jredisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg name="host" value="${redis.host}" />
                    <constructor-arg name="port" value="${redis.port}" />
                    <constructor-arg name="timeout" value="${redis.timeout}" />
                    <constructor-arg name="weight" value="1" />
                  <!--   <constructor-arg name="password" value="${redis.password}" /> -->
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <!-- 支持上传文件 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
      <!-- 设置上传文件的最大尺寸为2000MB --> 
        <property name="maxUploadSize">    
            <value>2048000000</value>    
        </property>  
         <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="2048000" />
    </bean>
   
	
</beans>